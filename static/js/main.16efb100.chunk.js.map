{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","undefined","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAgBeA,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,mBAAf,UACF,gJAIM,kE,gFCyBGC,MA9Bf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,cAAC,IAAD,CAAMC,GAAI,CACLC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,WAPT,SAUH,sBAAKP,UAAU,QAAf,UACI,qBAAKW,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,cAA2Ca,IAAXN,EAAuBA,EAAOO,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAIhB,UAAU,gBAAd,SAA2Ce,GAARC,MAAwB,KAC/I,oBAAGhB,UAAU,iBAAb,UAA+BK,EAAQY,MAAM,EAAG,KAAhD,kBC8CDC,G,wDAjDX,aAAe,IAAD,8BACV,gBAMJR,MAAQ,CACJS,WAAW,EACXC,OAAQ,IATE,EAedC,UAfc,sBAeF,8BAAAC,EAAA,sEAW6BC,IAAMC,IAAI,6CAXvC,gBAWWJ,EAXX,EAWDK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAZ1B,2CAfE,E,qDA6Bd,WACIQ,KAAKN,c,oBAGT,WAAS,MACyBM,KAAKjB,MAA3BS,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,yBAASpB,UAAU,YAAnB,SACKmB,EACM,qBAAKnB,UAAU,SAAf,SAAwB,sBAAMA,UAAU,eAAhB,0BACxB,qBAAKA,UAAU,SAAf,SACMoB,EAAON,KAAI,SAAAc,GAAK,OACb,cAAC,EAAD,CAAsB1B,GAAI0B,EAAM1B,GAAIC,KAAMyB,EAAMzB,KAAMC,MAAOwB,EAAMxB,MAAOE,OAAQsB,EAAMC,mBAAoBxB,QAASuB,EAAMvB,QAASE,OAAQqB,EAAMrB,QAAtIqB,EAAM1B,e,GArD/B4B,IAAMC,YCWVC,E,uKAhBX,WAAqB,IAAD,EACWL,KAAK9B,MAAzBoC,EADS,EACTA,SAASC,EADA,EACAA,aACMrB,IAAnBoB,EAASvB,OACRwB,EAAQC,KAAK,O,oBAIrB,WAAS,IACEF,EAAYN,KAAK9B,MAAjBoC,SACP,OAAGA,EAASvB,MACD,+BAAOuB,EAASvB,MAAMN,QAEtB,S,GAbE0B,IAAMC,W,MCWZK,MATf,WACI,OAAO,sBAAKpC,UAAU,MAAf,UAGH,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCQO6B,MAVf,WACI,OAAO,eAAC,IAAD,WACC,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWtB,IACxC,cAAC,IAAD,CAAOoB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,aAAaE,UAAWR,QCJhDS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16efb100.chunk.js","sourcesContent":["import React from 'react';\nimport \"./About.css\";\n\nfunction About(props){\n    console.log(props);\n    return (\n        <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follows.”\n      </span>\n            <span>− George Orwell, 1984</span>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css'\nimport {Link} from \"react-router-dom\";\n\n//state가 필요없는 경우에는 class component가 될 필요가 없고 function component로 충분\nfunction Movie({id, year, title, summary, poster, genres}){\n    return <Link to={{\n                pathname: `/movie/${id}`,\n                state: {\n                    year,\n                    title,\n                    summary,\n                    poster,\n                    genres\n                }\n            }}>\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title}/>\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">{(genres !== undefined)? genres.map((genre, index) => <li className=\"genres__genre\" key={index}>{genre}</li> ) : ''}</ul>\n                <p className=\"movie__summary\">{summary.slice(0, 150)}...</p>\n            </div>\n        </div>\n    </Link>\n}\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,//medium_cover_image\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css'\n/*\n(참고) state를 위해 Class component를 더 이상 가질 필요 없음\n> react hook 이라는 것이 새로 나옴\n */\nclass Home extends React.Component{\n    /*\n    Life Cycle : component의 대부분을 컨트롤할 수 있음\n    - Mounting\n    1) 먼저 호출되는 fucntion은 constructor()\n    2) 그리고 나서 render()\n    3) 그리고 나서 componentDidMount()\n    - Updating\n    >> 내가 변경하는 것들\n    - UnMounting\n    >> component가 죽을 때 (ex. 다른 페이지로 이동 등)\n     */\n    constructor() {\n        super();\n    }\n    /*\n    state : 보통 동적 데이터와 함께 작업할 때 만들어짐, 즉 변하는 데이터 or 존재하지 않는 데이터 => 이런 것은 props가 돕지 못함\n    *** setState를 호출하면 react는 state를 refresh하고 또한 render function을 호출함 (virtualDOM을 통해 필요한 부분만 update)\n     */\n    state = {\n        isLoading: true,\n        movies: [] // 처음에 선언하는 것이 필수는 아님\n    }\n    /*\n     axios는 느리기 때문에 componentDidMount가 끝날때까지 시간이 걸릴 수 있다고 말해야함\n     & 우리는 그걸 기다려야하기 때문에 async - await 붙여줌 (이것이 비동기다!!)\n     */\n    getMovies = async () => {\n        // axios => fetch위에 있는 작은 layer와 같음\n        /* 참고\n         https://github.com/serranoarevalo/yts-proxy\n         https://yts.mx/api#list_movies\n         */\n\n        // const movies = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n        // console.log(movies.data.data.movies);\n        // this.setState({movies:movies})\n        // es6 표현 익힐것! ㄴ> 위와 아래는 동일한 의미\n        const {data:{data:{movies}}} = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n        this.setState({movies, isLoading: false});\n    }\n    componentDidMount() { // component가 mount 되자마자 호출됨\n        this.getMovies();\n    }\n\n    render() { // react는 자동적으로 class component의 render method를 실행함\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading\n                    ? (<div className=\"loader\"><span className=\"loader__text\">Loading...</span></div>)\n                    : (<div className=\"movies\">\n                            {movies.map(movie => (\n                                <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} poster={movie.medium_cover_image} summary={movie.summary} genres={movie.genres}/>\n                            ))}\n                        </div>\n                    )}\n            </section>);\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Detail extends React.Component {\n    componentDidMount() {\n        const {location,history} = this.props;\n        if(location.state === undefined){\n            history.push('/');\n        }\n    }\n\n    render(){\n        const {location} = this.props;\n        if(location.state){\n            return <span>{location.state.title}</span>\n        }else{\n            return null;\n        }\n    }\n}\nexport default Detail;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Navigation.css'\n\nfunction Navigation(){\n    return <div className=\"nav\">\n        {/*<a href=\"\">로 사용하면 html 태그가 작동하여 페이지를 리프레쉬함 => So, <Link to>로 사용!*/}\n        {/* Link는 router 밖에서 사용할 수 없음!! */}\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n    </div>\n}\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport Navigation from \"./components/Navigation\";\n\nfunction App(){\n    return <HashRouter>\n            <Navigation />\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/movie/:id\" component={Detail} />\n        </HashRouter>;\n}\n// BrowserRouter도 사용할 수 있으나, github pages 설정시 번거로움이 있음\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// react는 component와 함께 동작! 모든 것은 component!\n// component란? HTML을 반환하는 함수 like App.js - function App(){}\n// javascript 와 HTML 사이의 조합을 JSX라고 함\n// react application은 하나의 component(즉, App)만을 rendering 해야함 >> So, 모든 컴포넌트는 application 안에 들어가야\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// react > app.js component를 root 내부에 넣어줌 >> Virtual DOM\n// application 이 처음 로딩될땐 빈 HTML 로드하고 그 후에 react가 HTML을 밀어넣음 => react가 빠르게 작동하는 이유!"],"sourceRoot":""}